apiVersion: v1
kind: Service
metadata:
  name: mysqldb
spec:
  ports:
  - name: mysql
    port: 3306
    targetPort: 3306
  selector:
    name: mysql
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  name: mysql
  labels:
    name: mysql
spec:
  replicas: 1
  selector:
    name: mysql
  strategy:
    type: Rolling
    rollingParams:
      post:
        failurePolicy: Abort
        execNewPod:
          containerName: mysql
          command:
          - /bin/bash
          - -c
          - mysql -u $MYSQL_USER -p$MYSQL_PASSWORD --database $MYSQL_DATABASE -h $DATABASE_SERVICE_NAME -e 'CREATE TABLE Item (id BIGINT not null auto_increment primary key, description VARCHAR(100), done BIT);'; mysql -u $MYSQL_USER -p$MYSQL_PASSWORD --database $MYSQL_DATABASE -h $DATABASE_SERVICE_NAME -e 'INSERT INTO Item (id, description, done) VALUES (2,"Buy groceries", 0);'
          env: 
            - name: MYSQL_USER
              value: todoapp
            - name: MYSQL_PASSWORD
              value: todoapp123
            - name: MYSQL_DATABASE
              value: todo
            - name: DATABASE_SERVICE_NAME
              value: mysqldb
  template:
    metadata:
      labels:
        name: mysql
      name: mysql
    spec:
      containers:
      - env:
        - name: MYSQL_USER
          value: todoapp
        - name: MYSQL_PASSWORD
          value: todoapp123
        - name: MYSQL_DATABASE
          value: todo
        image: ' '
        livenessProbe:
          initialDelaySeconds: 30
          tcpSocket:
            port: 3306
          timeoutSeconds: 1
        name: mysql
        ports:
        - containerPort: 3306
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD='todoapp123' mysql -h 127.0.0.1 -u todoapp
              -D todo -e 'SELECT 1'
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /var/lib/mysql/data
          name: data
      volumes:
      - emptyDir: {}
        name: data
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - mysql
      from:
        kind: ImageStreamTag
        name: mysql:5.7
        namespace: openshift
    type: ImageChange
  - type: ConfigChange